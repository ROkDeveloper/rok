
#Область Модули_Отладки


#КонецОбласти

#Область Взаимодействие

&НаСервере
Процедура Получить_ХМЛ_из_Структура()
	
	Если не Объект.Отчет Тогда
		СтруктураЗапрос	=	новый структура("Запрос_Текст,Запрос_Параметры",Запрос_Текст,РеквизитФормыВЗначение("Запрос_Параметры"));	
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ПодготовитьДанныеДляЗаписи(СтруктураЗапрос);
		ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьДанныеНаФорме(ПараметрЗаполнения)
	
	Если ПараметрЗаполнения.Отчет Тогда
		
		Структура_ХМЛ = ПолучитьИзВременногоХранилища(ПараметрЗаполнения.АдресХранилищаХМЛ);		
		Объект.ХМЛ_Данные =	Структура_ХМЛ.ХМЛ_СКД; 
		Объект.ХМЛ_Настройки = Структура_ХМЛ.ХМЛ_СКД_Настройки;
		
		Объект.Отчет =	ПараметрЗаполнения.Отчет; 
		Объект.Наименование	=	ПараметрЗаполнения.Наименование;
		Если ПустаяСтрока(Объект.Идентификатор) Тогда
			Объект.Идентификатор = ПараметрЗаполнения.Транслит;
		КонецЕсли;			
	КонецЕсли;	
	
	Модифицированность = Истина;
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.Запрос.Видимость = не Объект.Отчет;
	Элементы.Группа10.Видимость = не Объект.Отчет; //актуально только для кода
	
	Элементы.Разделитель.Видимость = Объект.ТипИсточника="txt";	
	Элементы.ЗаписейПотоков.Видимость = Объект.ТипИсточника="txt" или Объект.ТипИсточника="json";
	Элементы.КоличествоВПаралельном.Видимость = Объект.ТипИсточника="txt" или Объект.ТипИсточника="json";	
	
КонецПроцедуры




&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоНовый	=	не ЗначениеЗаполнено(Объект.Ссылка);
	Если ЭтоНовый Тогда
		Объект.Разделитель = "|";
		Объект.ТипИсточника = "txt";
	КонецЕсли;	
	
	
	ЗаполнитьДанными = Ложь;
	Если Параметры.Свойство("Заполнить",ЗаполнитьДанными) и  ЗаполнитьДанными Тогда  //на основании запроса/отчета		
		
		ЗаполнитьДанныеНаФорме(Параметры);				
		ОбновитьАдресСервисаНаСервере();
		Сообщить(?(ЭтоНовый,"Создан и заполнен","Перезаполнен"));		
		
	Иначе
		//Заполнить шаблоном кода
		ЗаполнитьКодШаблономНаСервере();
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();	
	
КонецПроцедуры

&НаСервере
Процедура НаименованиеПриИзмененииНаСервере()
	
	Объект.Идентификатор	=	AQ_Модуль.Транслит(Объект.Наименование);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	НаименованиеПриИзмененииНаСервере();
	ОбновитьАдресСервисаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКодШаблономНаСервере(Форсировать=Ложь)

	Если ПустаяСтрока(Объект.ПроизволныйКод) или Форсировать Тогда
		мТекстМодуля = Справочники.pbi_запросы.ПолучитьТекстМакетаПоУмолчанию();	
		Объект.ПроизволныйКод = мТекстМодуля;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКодШаблоном(Команда)
	ЗаполнитьКодШаблономНаСервере(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаСервере
Процедура ОбновитьАдресСервисаНаСервере()
	
	МПараметрыЗапроса	= Объект.Идентификатор;	
	ТЧ_Параметры	=	Объект.ТЧ_Параметры;
	
	Если ТЧ_Параметры.Количество()>0 Тогда
		СП	=	новый структура;
		Для каждого ТекСтрока из ТЧ_Параметры Цикл
			СП.Вставить(ТекСтрока.Ключ,ТекСтрока.Значение);		
		КонецЦикла;		
		
		СтруктураЗапроса = Новый Структура("id_api_query,param",Объект.Идентификатор,СП);
		Попытка
			МПараметрыЗапроса = AQ_Модуль.СерилизацияJSON(СтруктураЗапроса);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;		
	КонецЕсли;			
	
	
	
	мИмяСервера = РегистрыСведений.AQ_Настройки.ПолучитьЗначениеНастройки("ИмяСервера");
	мИмяБазы = РегистрыСведений.AQ_Настройки.ПолучитьЗначениеНастройки("ИмяБазы");
	Объект.АдресСервиса =  СтрШаблон("http://%1/%2/hs/query/query_data/%3",мИмяСервера,мИмяБазы,МПараметрыЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьАдресСервиса(Команда)
	ОбновитьАдресСервисаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	
	ПараметрыФормы = Новый Структура("", );
	ОткрытьФорму("РегистрСведений.AQ_Настройки.ФормаСписка");

КонецПроцедуры

&НаКлиенте
Процедура ТипИсточникаПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура Инструкция(Команда)
	ПерейтиПоНавигационнойСсылке( "https://docs.google.com/document/d/1a_Jt2QsMo_4-nxweabZ6dXxhMTgPnifPHRwcIfZpFp4/edit?usp=sharing");
КонецПроцедуры

&НаКлиенте
Процедура Написать(Команда)
	ПерейтиПоНавигационнойСсылке( "https://t.me/legadani");	
КонецПроцедуры


#КонецОбласти

#Область Тестирование_результата


#КонецОбласти



